데이터 프레임 필수 COLUMNS 및 시각화 시나리오

현재 순위, 지난주 순위, 게임이름, 퍼블리셔 이름, 페이지URL, 앱평가점수, 앱홍보영상URL, 공식카페URL

>> 기능별 추가적으로 필요한 COLUMNS

1, 2번 기능 >> 지난주와의 순위차이, 4주 전과의 순위차이

                                            >> 수집 기간의 비규칙 고려, 기간 무시 5번의 수집 데이터중
                                               1번째 순위와 5번째 순위사이의 격차가 가장 큰 게임 5개 나열 보이기.
                                      
                                      ============================================================================
                                      
                                       11.6 >> 5개 기간중 첫 기간과 마지막 기간의 순위에 따른 게임이름 가져오는 것에
                                               성공함. 순위 격차를 구하기 위해서 필요 한 것.
                                               
                                               >> 첫기간의 특정 'gameName' 의 ranking 과 마지막기간의 해당 'gameName'의
                                                  ranking의 차이의 절대 값.
                                               
                                               >> 첫기간과 마지막 기간의 특정 게임 이름이 양 기간에 모두 존재해야 비교 가능.
                                                  
                                                  >> for gameName 20개
                                                        if 첫기간의 gameName in 마지막기간의 Dataframe: 
                                                                랭킹 차이 절대값 연산 값 반환
                                                       ==========>> 첫기간에도 존재하고 마지막 기간에도 존재해야 순위변동값이 나오게.
                                                       
                                                       
                                              df_box.loc[df_box['gameName'] == df_box.iloc[0][0]]
                                              # df_box.iloc[0][0]] 은 'Helix Jump' 인 상태.
                                              # df_box.iloc[0][0]] 가 마지막기간의 DataFrame 안에 존재해야함.
                                              df_box_last_per = (df_box.loc[df_box['datetime'] == df_box.iloc[-1][-1]])
                                              df_box_last_per
                                                       
3, 4번 기능 >> 잔류 주, 최대 연속 잔류 주

                                       11.05 >> 카운팅을 자동으로 전달하기 보다는, 우선 DB에서 데이터를 가져 온뒤, 후처리로
                                                가져오는 것이 더합리적으로 판단됨.

                                             >> 카운팅은 DataFrame을 가져오면 거기서 find 같은 함수로 게임이름이 몇번 등장
                                                했는지로 카운팅 방식 고려.
                                      ====================================================================================  
                                       11.06 >> df_box.loc[df_box['gameName'] == 'value name'] 을 이용하면
                                                나오는 결과의 row 수가 곧 해당 기간동안의 잔류 횟수임.


5번 기능    >> 랭킹 + 평점 조합 Rating            >> 시각화 시나리오  => 랭킹+평점 조합 Rating 상위 5개 게임 시각화.
                                                    -> 랭킹+평점 조합의 값을가진 게임들중 상위 5개.
                                                    -> 조합된 점수 그자체가 시각화의 수치.
                                                    -> 5번의 수집이 있으므로 5번의 순위와 5번의 평점정보가 있음.
                                                       가중치를 계산한 New_rating을 산출하고 5로 나누어 줘서
                                                       총 5회분의 New_rating 평균으로 Period_Mean_rating 생성 고려.

======================> 추가되어야할 컬럼제작..


2. 제공 하는 정보 및 의의.
 
 1) 매주 가장 큰 순위 변동폭을 보이는 게임을 변동폭 크기 기준 내림차순으로 보여주는 기능.
  > 주간 변동폭, 월간(4주) 변동폭...
  = 순위의 변동폭이 큰 게임 목록을 체크하면서, 해당 조건의 게임들이 가지고 있는 공통점을 검토할 수 있습니다. 
 ==============================================================================================


 ==============================================================================================
 2) 매주 가장 작은 순위 변동폭을 보이는 게임을 변동폭 크기 기준 오름차순으로 보여주는 기능.
  > 주간 변동폭, 월간(4주) 변동폭...
  = 순위 변동폭이 적은 게임 목록을 체크하면서, 해당 조건의 게임들이 가지고있는 공통점을 검토 할 수 있습니다.
  
     >>>>> 종합적으로 순위변동폭이 큰 게임들과 작은 게임들의 차이점을 검토할 수 있습니다.




  3) 특정 순위권 내에 꾸준히 존재하는 게임을 보여주는 기능
  > 특정 순위권 내에 속해있는 1주당 count += 1. ex) 10주중 9주 동안 20위권 내 잔류
  = 높은 랭크로 오래 잔류하고있는 게임에 대해 검토할 수 있습니다.
    
  4) 특정 순위권을 빠르게 이탈해버린 게임을 보여주는 기능
  > 특정 순위권에 속해 있던 count가 낮은 순의 게임들. ex) 10주중 20위권내 1주 존재하였음.
  = 높은 랭크에서 일시적으로 잔류 했던 게임에 대해 검토 할 수 있습니다.
  
     >>>>> 순위권을 유지하고있는 게임과 그렇지 못한 게임들의 차이점을 검토할 수 있습니다.
  
  

  
 5) 평점 가중치를 도입한 새로운 랭킹.
  > 절대 순위와 평점에 portion을 나누어 합친 레이팅을 가진 순위 생성.
                          >> 평점과 순위가 연관성이 있는지를 보여주는 상관성 분석을 시각화 하고
                          >> 이후 혼합 점수를 어떻게 만들지 다시 또 고민.
  = 평점과 순위와의 관계성을 검토 하여 평점 지향, 혹은 대중성 지향등 기획의 가중치를 위한 검토를 할 수 있습니다.
  
