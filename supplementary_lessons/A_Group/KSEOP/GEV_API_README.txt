1. 서비스 개발 관점
- 기획자의 관점
> 게임 기획 및 개발에 앞서 어떤 유형 또는 특성의 게임을 제작할지에 대한 방향 설정을 위해
  API에서 필요한 정보를 추출 및 정제하여 제공하는 서비스 만들기. 

2. 제공 하는 정보 및 의의.
 
 1) 매주 가장 큰 순위 변동폭을 보이는 게임을 변동폭 크기 기준 내림차순으로 보여주는 기능.
  > 주간 변동폭, 월간(4주) 변동폭...
  = 순위의 변동폭이 큰 게임 목록을 체크하면서, 해당 조건의 게임들이 가지고 있는 공통점을 검토할 수 있습니다. 
  
 2) 매주 가장 작은 순위 변동폭을 보이는 게임을 변동폭 크기 기준 오름차순으로 보여주는 기능.
  > 주간 변동폭, 월간(4주) 변동폭...
  = 순위 변동폭이 적은 게임 목록을 체크하면서, 해당 조건의 게임들이 가지고있는 공통점을 검토 할 수 있습니다.
  
     >>>>> 종합적으로 순위변동폭이 큰 게임들과 작은 게임들의 차이점을 검토할 수 있습니다.
  
 3) 특정 순위권 내에 꾸준히 존재하는 게임을 보여주는 기능
  > 특정 순위권 내에 속해있는 1주당 count += 1. ex) 10주중 9주 동안 20위권 내 잔류
  = 높은 랭크로 오래 잔류하고있는 게임에 대해 검토할 수 있습니다.

 4) 특정 순위권을 빠르게 이탈해버린 게임을 보여주는 기능
  > 특정 순위권에 속해 있던 count가 낮은 순의 게임들. ex) 10주중 20위권내 1주 존재하였음.
  = 높은 랭크에서 일시적으로 잔류 했던 게임에 대해 검토 할 수 있습니다.
  
     >>>>> 순위권을 유지하고있는 게임과 그렇지 못한 게임들의 차이점을 검토할 수 있습니다.
  
 5) 평점 가중치를 도입한 새로운 랭킹.
  > 절대 순위와 평점에 portion을 나누어 합친 레이팅을 가진 순위 생성.
  = 평점과 순위와의 관계성을 검토 하여 평점 지향, 혹은 대중성 지향등 기획의 가중치를 위한 검토를 할 수 있습니다.

    2-1. 세부 설정 조건
    - game:게임, app:일반앱, all:전체(게임+일반앱)
    - g:구글플레이, a:애플 앱스토어
    - 1:무료, 2:유료,3:매출,4:신규무료,5:신규유료
    - 1~OO위까지 출력 (max:100)

    2-2. 출력되는 정보들의 종류 및 저장 목적
    - 현재 순위
      > 과거 순위의 비교
      
    - 1주전 순위
      > 현재 순위 및 과거 순위와의 비교
      
    - 게임이름
      > 조사대상이 될 수 있는 게임의 상세 정보
      
    - 퍼블리셔 이름
      > 조사대상이 될 수 있는 게임의 상세 정보 및 퍼블리셔에 대한 정보
      
    - 구글 및 애플 앱스토어 다운로드 상세페이지 URL
      > 다운로드 희망시 빠른 연결
      
    - 앱 평가 점수
      > 조사대상이 될 수 있는 게임의 상세 정보, 평점과 순위 지속성의 관계 인지가능성
      
    - 앱 홍보 동영상
      > 홍보 동영상에 대한 주관적인 인식과 게임의 흥행과의 연관성 판단을 위한 자료.
      
    - 공식카페 URL
      > 공식카페의 존재 유무 자체의 의미 또는 해당 게임의 운영 관련 정보를 얻을 수 있는 URL임.

3. DB에 어떤 정보를 연동 할 것인가?

- 게임의 기본적인 상세 정보 (2-1, 2-2의 항목)
- 추출한 데이터를 정제하여 새롭게 생성한 데이터 ( ex) 순위 변동 크기 등 )


4. DB에 어떻게 연동할 것인가?
=> JUPYTER NOTEBOOK에서 수집한 뒤 DataFrame화
=> DataFrame 조작을 통해 제공하고자 하는 정보 생성
=> HEIDI SQL에 동일한 TABLE 생성 및 동기화하여 연동.
=> 지속적인 Update 이루어 지도록(우분투?)

5. 입력 기능은 어떻게 제공할 것인가?
- 윈도우 창으로?

